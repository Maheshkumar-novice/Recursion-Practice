#!/usr/bin/env ruby
# frozen_string_literal: true

# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.
# https://projecteuler.net/problem=2

def even_fibonacci(limit, current, prev, sum = 0)
  return sum if current >= limit

  sum += current if (current % 2).zero?
  current, prev = current + prev, current
  even_fibonacci(limit, current, prev, sum)
end

p even_fibonacci(4_000_000, 2, 1)
